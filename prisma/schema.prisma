// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Define the Role model
model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Define the User model
model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String
  password      String
  profileImage  String?
  bio           String?
  roleId        Int
  role          Role      @relation(fields: [roleId], references: [id])
  posts         Post[]
  comments      Comment[]
  likes         Like[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Define the Post model
model Post {
  id           Int       @id @default(autoincrement())
  title        String
  content      String
  imageUrl     String?
  published    Boolean   @default(false)
  location     String?
  authorId     Int
  author       User      @relation(fields: [authorId], references: [id])
  comments     Comment[]
  categories   Category[]
  likes        Like[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

// Define the Comment model
model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Define the Category model
model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  posts       Post[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Define the Like model
model Like {
  id        Int      @id @default(autoincrement())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([postId, userId])
}
